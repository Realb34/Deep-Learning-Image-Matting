import os
import torch
from torch import nn
from torch.utils.data import DataLoader, Dataset
from torchvision.models import vgg16
import torch.optim as optim
from PIL import Image
from torchvision.transforms import ToTensor, ToPILImage
import matplotlib.pyplot as plt

def get_device():
    if torch.cuda.is_available():
        try:
            torch.cuda.current_device()
            return torch.device('cuda')
        except:
            print('Switching to CPU due to CUDA error')
            return torch.device('cpu')
    else:
        return torch.device('cpu')
device = get_device()
print(f'Using device: {device}')
if device.type == 'cuda':
    print(torch.cuda.get_device_name(0))
    print('Memory Usage:')
    print('Allocated:', round(torch.cuda.memory_allocated(0)/1024**3,1), 'GB')
    print('Cached:   ', round(torch.cuda.memory_reserved(0)/1024**3,1), 'GB')
